#!/usr/bin/env bash
# This script installs HAProxy and configures it to load balance between two web servers using a roundrobin algorithm.

# Variables
STUDENT_ID="colilesibanda@gmail.com"
WEB1="${STUDENT_ID}-web-01"
WEB2="${STUDENT_ID}-web-02"
WEB1_IP="54.87.172.130"
WEB2_IP="18.207.217.223"

# Install HAProxy if it's not already installed
if ! command -v haproxy >/dev/null 2>&1; then
    sudo apt-get update && sudo apt-get install -y haproxy
fi

# Define HAProxy configuration file path
HAPROXY_CFG="/etc/haproxy/haproxy.cfg"

# Backup original HAProxy config if not already done
if [ ! -f "${HAPROXY_CFG}.bak" ]; then
    sudo cp ${HAPROXY_CFG} ${HAPROXY_CFG}.bak
fi

# Write new HAProxy configuration
sudo bash -c "cat > ${HAPROXY_CFG}" <<EOC
global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend http_front
    bind *:80
    default_backend http_back

backend http_back
    balance roundrobin
    server ${WEB1} ${WEB1_IP}:80 check
    server ${WEB2} ${WEB2_IP}:80 check
EOC

# Restart HAProxy service to apply the new configuration
sudo systemctl restart haproxy

echo "HAProxy has been installed and configured to load balance ${WEB1} and ${WEB2}."
